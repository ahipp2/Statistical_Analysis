z$

##WITHOUT Transpose
> dataset <- read.delim(file.choose(), header=FALSE)
> pca <- prcomp((dataset1), scale=TRUE)
> plot(pca$x[,1], pca$x[,2])
> pca.var <- pca$sdev^2
> pca.var.per <- round(pca.var/sum(pca.var)*100,1)
> barplot(pca.var.per, main="Scree Plot", xlab="Principal Component", ylab="Percent Variation")
> pca.data <- data.frame(Sample=rownames(pca$x), X=pca$x[,1], Y=pca$x[,2])
> library(ggplot2)
> ggplot(data=pca.data, aes(x=X, y=Y, label=Sample)) + geom_text() + xlab(paste("PC1 - ", pca.var.per[1], "%", sep="")) + ylab(paste("PC2 - ", pca.var.per[2], "%", sep="")) + ggtitle("Assignment 1 - PCA Graph")


Analysis and graphs completed in R Studio.

The first 2 components contribute 85% of the total variance.
Principal component 1 contributes 80.2% variance and
Principal component 2 contributes 4.8%.

From the Scree Plot we can see a dimension reduction from 
380 features to 44 features. 

These results are much more intuitive compared to the results from the pca program provided. 
The program generated a coefficient matrix and a list of corresponding eigenvalues. 
Rather than compute the transformation matrix, I pivoted to using R to complete this 
assignment. 
